def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion


    signingConfigs {
        positivo {
            storeFile file('..\\..\\Chaves\\positivo-keystore.jks')
            keyAlias 'platform'
            keyPassword '654321'
            storePassword '123456'
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/api_release.kotlin_module'
        exclude 'META-INF/client_release.kotlin_module'
    }
    
    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.accesys.stone_smart_flutter_example"
        minSdkVersion 23
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName "1.0"
    }

    buildTypes {
        release {
            shrinkResources false
            minifyEnabled true
            initWith debug
            signingConfig signingConfigs.positivo
            matchingFallbacks = ['debug']
        }
        debug {
            shrinkResources false
            minifyEnabled false
            initWith debug
            signingConfig signingConfigs.positivo
            matchingFallbacks = ['debug']
        }
    }
}
flutter {
    source '../..'
}
// configurations {
//     all*.exclude group: 'xpp3', module: 'xpp3'
// }

dependencies {
    //implementation 'xmlpull:xmlpull:1.1.3.4d_b4_min'
    
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
